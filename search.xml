<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【数字综合和布局布线】有点难度的布局布线教程</title>
      <link href="/2024/08/26/%E3%80%90%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E5%92%8C%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E3%80%91%E6%9C%89%E7%82%B9%E9%9A%BE%E5%BA%A6%E7%9A%84%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E6%95%99%E7%A8%8B/"/>
      <url>/2024/08/26/%E3%80%90%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E5%92%8C%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E3%80%91%E6%9C%89%E7%82%B9%E9%9A%BE%E5%BA%A6%E7%9A%84%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-导入netlist和sdc"><a href="#1-导入netlist和sdc" class="headerlink" title="1 导入netlist和sdc"></a>1 导入netlist和sdc</h2><p>terminal中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd netlist</span><br><span class="line">cp ../../../synthesis_spi_TOP_1/synthesis/results/spi_slave.v ./</span><br><span class="line">cd ..</span><br><span class="line">cd sdc</span><br><span class="line">cp ../../../synthesis_spi_TOP_1/synthesis/results/spi_slave.sdc ./</span><br></pre></td></tr></table></figure><p>不过需要把这两个文件改名为top.v和top.sdc，因此我使用mv指令改了一下，后面会少一些工作。</p><h2 id="2-开启innovus"><a href="#2-开启innovus" class="headerlink" title="2 开启innovus"></a>2 开启innovus</h2><p>这里学长讲的打开innovus方法略显复杂，我做了一些简化：<br>创建一个run.sh，里面写入：<br><code>source /cad/cshrc/cds/CSHRC_lnx.IC6_in &amp;&amp; innovus</code><br>以后启动innovs仅需要在改文件夹运行terminal执行一句话即可：<br><code>csh run.sh</code></p><h2 id="3-开始布局布线"><a href="#3-开始布局布线" class="headerlink" title="3 开始布局布线"></a>3 开始布局布线</h2><p>先把工艺拷贝到目录下：<br><code>cp -r  /cad/DONGBU/DONGBU1824/DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02 ./</code><br>这是由于mmmc文件和pr文件中所有工艺库路径都是以.&#x2F;开始，因此需要拷贝工艺库到项目的根目录。</p><p>在spi_mmmc.tcl中修改三个timing的地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create_library_set -name ls_wc -timing &#123; \</span><br><span class="line">      ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LIBERTY/1824HP18BA_HDSVT1P8V_ISO_TT_1P8V_25C.lib\</span><br><span class="line">           &#125; \:w</span><br><span class="line">create_library_set -name ls_bc -timing &#123; \</span><br><span class="line">  ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LIBERTY/1824HP18BA_HDSVT1P8V_ISO_FF_1P98V_M40C.lib\</span><br><span class="line">  &#125; \</span><br><span class="line">create_library_set -name ps_wc -timing &#123; \</span><br><span class="line">   ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LIBERTY/1824HP18BA_HDSVT1P8V_ISO_SS_1P62V_125C.lib\                       </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>在spi_pr.tcl的initleffile修改leaf文件，以及tiecells修改TIE和CKIVD<br><code>set init_lef_file           [list  ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LEF/1824HP18BA_HDSVT1P8V_6M_THICK_TECH.lef ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LEF/1824HP18BA_HDSVT1P8V_ISO.lef  ]</code></p><p>此外，还需要修改mapfile</p><p><code>streamOut top.gds   -mapFile ./DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LEF/1824HP18BA_STREAMOUT.map -libName DesignLib -units 1000 -mode ALL</code>z</p><blockquote><p>注意：将saveNetlist -includePowerGround -flat top.v -excludeLeafCell注释掉，否则得到的top.v文件无法转化为schematic（原因是每个cell被加上了vdd和vss端口，与symbol不匹配）</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【数字综合与布局布线】超简单的数字综合教程</title>
      <link href="/2024/08/25/%E3%80%90%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E4%B8%8E%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E3%80%91%E8%B6%85%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E6%95%99%E7%A8%8B/"/>
      <url>/2024/08/25/%E3%80%90%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E4%B8%8E%E5%B8%83%E5%B1%80%E5%B8%83%E7%BA%BF%E3%80%91%E8%B6%85%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E5%AD%97%E7%BB%BC%E5%90%88%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>本文介绍candence中innovas使用教程，将以DONGBU1824工艺为例进行阐述。</p><p>综合部分所用到的约束文件目录如下：</p><ul><li>rtl:存放需要综合的.v文件</li><li>synthesis：<ul><li>run_dc.tcsh:bash命令，用于启动综合脚本</li><li>constraints：<ul><li>top_constraint.tcl:时钟约束</li></ul></li><li>scripts:<ul><li>dc_setup.tcl</li><li>dc_flow.tcl</li><li>run_dc.tcsh</li></ul></li></ul></li></ul><h2 id="1-导入rtl文件"><a href="#1-导入rtl文件" class="headerlink" title="1 导入rtl文件"></a>1 导入rtl文件</h2><p>将准备好的需要综合的verilog代码存入rtl&#x2F;xxx.v。本文以spi的从机为例，其文件名为spi_slave.v。</p><h2 id="2-设置constraint-tcl时钟约束"><a href="#2-设置constraint-tcl时钟约束" class="headerlink" title="2 设置constraint.tcl时钟约束"></a>2 设置constraint.tcl时钟约束</h2><p>打开constraints&#x2F;top_constraint.tcl，修改时钟约束脚本。</p><blockquote><p>始终约束脚本用于综合工具中的时序分析。<br>它依次定义了扇出（限制信号驱动的门数）；设置时钟周期，时钟的不确定性与过渡时间<br>false_path标记rst端口的路径为虚假路径，不进行时序分析<br>max_delay设置所有输入到所有输出的最大延时</p></blockquote><p>对于本项目中，时钟信号为sclk，复位信号为csb。在vim窗口中快速替换端口名称即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s#clk#sclk#g</span><br></pre></td></tr></table></figure><p>对于input_delay不太好理解，可以参考下图：<img src="https://raw.githubusercontent.com/zhxtian/blogpic/main/tools/20240826141529.png">来源于文章：<img src="https://blog.csdn.net/icxiaoge/article/details/132351801?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172465269916800180615801%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172465269916800180615801&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-132351801-null-null.142%5Ev100%5Epc_search_result_base1&utm_term=set_input_delay%E7%9A%84%E6%9C%AC%E8%B4%A8&spm=1018.2226.3001.4187"></p><h2 id="3-设置dc-flow-tcl工作流文件"><a href="#3-设置dc-flow-tcl工作流文件" class="headerlink" title="3 设置dc_flow.tcl工作流文件"></a>3 设置dc_flow.tcl工作流文件</h2><p>跑综合的过程，不需要改。</p><h2 id="4-设置dc-setup-tcl配置文件"><a href="#4-设置dc-setup-tcl配置文件" class="headerlink" title="4 设置dc_setup.tcl配置文件"></a>4 设置dc_setup.tcl配置文件</h2><ol><li><p>修改LIB_PATH<br><code>set LIB_PATH &quot;/cad/DONGBU/DONGBU1824/DBH_STD_1824HP18BA_HDSVT1P8V_ISO_14Q1_V02/LIBERTY&quot;</code><br>注意是数字库，不是模拟库</p></li><li><p>修改target_library<br><code>set vlgfiles [list \spi_slave.v \]</code></p></li><li><p>修改db文件<br><code>set target_library &#123;1824HP18BA_HDSVT1P8V_ISO_SS_1P62V_150C.db&#125;</code></p></li></ol><h2 id="5-运行综合"><a href="#5-运行综合" class="headerlink" title="5 运行综合"></a>5 运行综合</h2><p>在synthesis文件中打开terminal：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">synopsys.setup</span><br><span class="line">bash run\_dc.tcsh</span><br></pre></td></tr></table></figure><p>可在生成的result文件夹下查看输出结果<img src="https://raw.githubusercontent.com/zhxtian/blogpic/main/tools/20240826144256.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>绪</title>
      <link href="/2024/08/23/%E7%BB%AA/"/>
      <url>/2024/08/23/%E7%BB%AA/</url>
      
        <content type="html"><![CDATA[<p>时隔两年，zhxtian又和你见面啦！</p><p><img src="https://raw.githubusercontent.com/zhxtian/blogpic/main/tools/20240825150503.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
